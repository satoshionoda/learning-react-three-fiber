/* This file was initially auto-generated by https://github.com/pmndrs/gltfjsx and then adapted manually */

import { useGLTF } from "@react-three/drei";
import type { FC } from "react";
import type { Mesh, MeshStandardMaterial } from "three";

type Props = { color: string } & JSX.IntrinsicElements["group"];
export const Shoe: FC<Props> = ({ color, ...props }) => {
  const { nodes, materials } = useGLTF("/shoe.gltf");
  // The following is a read-out of the models contents, all of its
  // meshes, groups and so on.
  return (
    <group {...props} dispose={null}>
      {/* We can alter materials by piercing into them: materia-property={...} */}
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.shoe as Mesh).geometry}
        material={materials.laces}
        material-envMapIntensity={0.8}
      />
      {/* Or, we define new materials, which now allows full re-use */}
      <mesh castShadow receiveShadow geometry={(nodes.shoe_1 as Mesh).geometry}>
        <meshStandardMaterial
          color={color}
          aoMap={(materials.mesh as MeshStandardMaterial).aoMap}
          normalMap={(materials.mesh as MeshStandardMaterial).normalMap}
          roughnessMap={(materials.mesh as MeshStandardMaterial).roughnessMap}
          metalnessMap={(materials.mesh as MeshStandardMaterial).metalnessMap}
          envMapIntensity={0.8}
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.shoe_2 as Mesh).geometry}
        material={materials.caps}
        material-envMapIntensity={0.8}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.shoe_3 as Mesh).geometry}
        material={materials.inner}
        material-envMapIntensity={0.8}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.shoe_4 as Mesh).geometry}
        material={materials.sole}
        material-envMapIntensity={0.8}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.shoe_5 as Mesh).geometry}
        material={materials.stripes}
        material-envMapIntensity={0.8}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.shoe_6 as Mesh).geometry}
        material={materials.band}
        material-envMapIntensity={0.8}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.shoe_7 as Mesh).geometry}
        material={materials.patch}
        material-envMapIntensity={0.8}
      />
    </group>
  );
};
